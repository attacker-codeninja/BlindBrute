{
  "Microsoft SQL Server, MySQL, Sybase ASE": {
    "version_query": "SELECT @@version",
    "substring_query": "SUBSTRING",
    "length_query": {
      "Microsoft SQL Server": "LEN",
      "MySQL": "LENGTH",
      "Sybase ASE": "LEN"
    },
    "sleep_query": {
      "Microsoft SQL Server": "WAITFOR DELAY '00:00:%'",
      "MySQL": "SLEEP(%)",
      "Sybase ASE": "WAITFOR DELAY '00:00:%'"
    }
  },
  "PostgreSQL, MariaDB, Greenplum, CockroachDB, Percona Server, Amazon Redshift": {
    "version_query": "SELECT version()",
    "substring_query": "SUBSTRING",
    "length_query": {
      "PostgreSQL": "LENGTH",
      "MariaDB": "LENGTH",
      "Greenplum": "LENGTH",
      "CockroachDB": "LENGTH",
      "Percona Server": "LENGTH",
      "Amazon Redshift": "LENGTH"
    },
    "sleep_query": {
      "PostgreSQL": "pg_sleep(%)",
      "MariaDB": "SLEEP(%)",
      "Greenplum": "pg_sleep(%)",
      "CockroachDB": "pg_sleep(%)",
      "Percona Server": "SLEEP(%)",
      "Amazon Redshift": "pg_sleep(%)"
    }
  },
  "MongoDB": {
    "version_query": "db.version()",
    "substring_query": "N/A",
    "length_query": "N/A",
    "sleep_query": "N/A"
  },
  "Redis": {
    "version_query": "INFO server",
    "substring_query": "N/A",
    "length_query": "N/A",
    "sleep_query": "N/A"
  },
  "Oracle": {
    "version_query": "SELECT * FROM v$version",
    "substring_query": "SUBSTR",
    "length_query": "LENGTH",
    "sleep_query": "DBMS_LOCK.SLEEP(%)"
  },
  "IBM Db2": {
    "version_query": "SELECT service_level FROM TABLE (sysproc.env_get_inst_info()) AS INSTANCEINFO",
    "substring_query": "SUBSTR",
    "length_query": "LENGTH",
    "sleep_query": "CALL DBMS_LOCK.SLEEP(%)"
  },
  "Neo4j": {
    "version_query": "CALL dbms.components() YIELD name, versions, edition UNWIND versions AS version RETURN name, version, edition",
    "substring_query": "SUBSTRING",
    "length_query": "LENGTH",
    "sleep_query": "CALL apoc.util.sleep(%000)"
  },
  "Teradata": {
    "version_query": "SELECT * FROM dbc.dbcinfo",
    "substring_query": "SUBSTRING",
    "length_query": "CHARACTER_LENGTH",
    "sleep_query": "SLEEP(%)"
  },
  "MariaDB (alternative)": {
    "version_query": "SHOW VARIABLES LIKE 'version'",
    "substring_query": "SUBSTRING",
    "length_query": "LENGTH",
    "sleep_query": "SLEEP(%)"
  },
  "Firebird": {
    "version_query": "SELECT rdb$get_context('SYSTEM', 'ENGINE_VERSION') FROM rdb$database",
    "substring_query": "SUBSTRING",
    "length_query": "CHAR_LENGTH",
    "sleep_query": "SLEEP(%)"
  },
  "HSQLDB": {
    "version_query": "SELECT DATABASE_VERSION() FROM INFORMATION_SCHEMA.SYSTEM_USERS",
    "substring_query": "SUBSTRING",
    "length_query": "LENGTH",
    "sleep_query": "SLEEP(%)"
  },
  "H2 Database": {
    "version_query": "SELECT H2VERSION() FROM DUAL",
    "substring_query": "SUBSTRING",
    "length_query": "LENGTH",
    "sleep_query": "SLEEP(%)"
  },
  "SAP HANA": {
    "version_query": "SELECT * FROM SYS.M_DATABASE",
    "substring_query": "SUBSTR",
    "length_query": "LENGTH",
    "sleep_query": "DO BEGIN WAIT FOR 'PT%S'; END"
  },
  "Ingres": {
    "version_query": "SELECT DBMSINFO('version') FROM iitables",
    "substring_query": "SUBSTR",
    "length_query": "LENGTH",
    "sleep_query": "SLEEP(%)"
  },
  "SQLite": {
    "version_query": "SELECT sqlite_version()",
    "substring_query": "SUBSTR",
    "length_query": "LENGTH",
    "sleep_query": "sqlite3_sleep(%000)"
  },
  "Cassandra": {
    "version_query": "SELECT release_version FROM system.local",
    "substring_query": "SUBSTR",
    "length_query": "LENGTH",
    "sleep_query": "N/A"
  }
}